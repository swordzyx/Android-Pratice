apply plugin: 'com.android.library'


class ExtensionDemo {
    def author = "Sword"
}

class PluginDemo implements Plugin<Project> {
    @Override
    void apply(Project target) {
        //创建扩展对象，create 第二个参数可以是 ExtensionDemo.class，后面的 .class 可以省略
        def extension = target.extensions.create('sword', ExtensionDemo)
        target.afterEvaluate {
            println "Hello ${extension.author}"
        }
    }
}

apply plugin: PluginDemo

sword {
    author 'zero'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

}